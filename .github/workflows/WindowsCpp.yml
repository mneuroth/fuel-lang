# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Windows C++

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    #- uses: microsoft/vs-buildtools-action@v1
    #  with:
    #    vs-version: 'latest'
    - uses: ilammy/msvc-dev-cmd@v1

    - name: Install 7Zip PowerShell Module
      shell: powershell
      run: Install-Module 7Zip4PowerShell -Force -Verbose

    # Build the project
    # cmake --build . --config Release
    - name: Build the project with CMake
      run: |
        cd CppLisp
        cmake --version
        cmake CMakeLists.txt
        cmake --build . --config Release
        dir
        dir Release
        dir x64
        dir x64\Release
        dir CppLispInterpreterTests
        dir CppLispInterpreter
        dir CppLispInterpreter\Release
        copy CppLispInterpreter\Release\FuelInterpreter.dll Release
        dir CppLispDebugger
        dir CppLispDebugger\Release
        copy CppLispDebugger\Release\FuelDebugger.dll Release
        mkdir Release\Library
        copy ..\Library\fuellib.fuel Release\Library
        copy ..\LICENSE Release\Library
        copy ..\README.md Release\Library
        cd Release
        dir
        ./fuel -v
        ./fuel -e "(println (platform))"
        ./fuel
        $result = &{./fuel -e "(println (version))"}
        echo $result
        $env:CURRENT_TAG = $result
        cd ..
        powershell Compress-7Zip ".\Release" -ArchiveFileName "fuel_cpp_binaries_$env:CURRENT_TAG.zip" -Format Zip
        dir
        cd ..
        dir

    - name: Build and test the project with MSBuild
      run: |
        cd CppLisp
        msbuild CppLisp.sln /property:Configuration=Release
        dir
        dir Release
        dir x64
        dir x64\Release
        cd x64
        cd Release
        vstest.console CppLispInterpreterTests.dll
        dir
